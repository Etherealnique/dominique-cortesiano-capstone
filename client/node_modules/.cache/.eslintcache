[{"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\index.js":"1","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\App.js":"2","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\config\\api.js":"3","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\CryptoContext.js":"4","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\config\\data.js":"5","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\components\\Header\\Header.js":"6","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\pages\\Home.js":"7","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\pages\\VirtualWallet.js":"8","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\components\\CoinModal\\CoinModal.js":"9","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\pages\\CoinDetails.js":"10","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\components\\CoinLineGraph\\CoinLineGraph.js":"11","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\components\\SelectButton\\SelectButton.js":"12","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\components\\CoinsTable\\CoinsTable.js":"13"},{"size":285,"mtime":1638408124266,"results":"14","hashOfConfig":"15"},{"size":739,"mtime":1638499093537,"results":"16","hashOfConfig":"15"},{"size":418,"mtime":1638402899978,"results":"17","hashOfConfig":"15"},{"size":820,"mtime":1638558292734,"results":"18","hashOfConfig":"15"},{"size":215,"mtime":1638374816758,"results":"19","hashOfConfig":"15"},{"size":494,"mtime":1638716762932,"results":"20","hashOfConfig":"15"},{"size":1680,"mtime":1638553154549,"results":"21","hashOfConfig":"15"},{"size":363,"mtime":1638717593855,"results":"22","hashOfConfig":"15"},{"size":2172,"mtime":1638556679185,"results":"23","hashOfConfig":"15"},{"size":2212,"mtime":1638489983654,"results":"24","hashOfConfig":"15"},{"size":3859,"mtime":1638559761644,"results":"25","hashOfConfig":"15"},{"size":808,"mtime":1638478300598,"results":"26","hashOfConfig":"15"},{"size":1213,"mtime":1638556607544,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ri62g9",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\index.js",[],["58","59"],"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\App.js",[],"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\config\\api.js",[],"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\CryptoContext.js",["60","61"],"import React, { createContext, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { CoinList } from \"./config/api\";\n\nconst Crypto = createContext();\n\nconst CryptoContext = ({ children }) => {\n  const [currency] = useState(\"USD\");\n  const [symbol] = useState(\"$\");\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const { data } = await axios.get(CoinList(currency));\n\n    setCoins(data);\n    setLoading(false);\n  };\n\n  return (\n    <Crypto.Provider value={{ currency, symbol, coins, loading, fetchCoins }}>\n      {children}\n    </Crypto.Provider>\n  );\n};\n\nexport default CryptoContext;\n\nexport const CryptoState = () => {\n  return useContext(Crypto);\n};\n","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\config\\data.js",[],"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\pages\\Home.js",[],"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\pages\\VirtualWallet.js",[],"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\components\\CoinModal\\CoinModal.js",[],"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\pages\\CoinDetails.js",["62"],"import { LinearProgress, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport CoinLineGraph from \"../components/CoinLineGraph/CoinLineGraph\";\nimport { SingleCoin } from \"../config/api\";\nimport { CryptoState } from \"../CryptoContext\";\nimport \"./CoinDetails.scss\";\n\nconst numberWithCommas = (x) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\nconst CoinDetails = () => {\n  const [coin, setCoin] = useState();\n  const { id } = useParams();\n\n  const { currency, symbol } = CryptoState();\n\n  const fetchCoin = async () => {\n    const { data } = await axios.get(SingleCoin(id));\n    setCoin(data);\n  };\n\n  useEffect(() => {\n    fetchCoin();\n  }, []);\n\n  const useStyles = makeStyles(() => ({}));\n\n  const classes = useStyles();\n\n  if (!coin) return <LinearProgress style={{ backgroundColor: \"gold\" }} />;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.sidebar}></div>\n      <img\n        className=\"coin-details__logo\"\n        src={coin?.image.large}\n        alt={coin?.name}\n        height=\"200\"\n        style={{ marginBottom: 20 }}\n      />\n      <h1 className=\"coin-details__cryto-name\">{coin?.name}</h1>\n\n      <h3 className=\"coin-details__description\">\n        {ReactHtmlParser(coin?.description.en.split(\". \")[0])}.\n      </h3>\n\n      <div className=\"coin-details__container-market\">\n        <h3 className=\"coin-details__market-data\">\n          Rank:{coin?.market_cap_rank}\n        </h3>\n        <h3 className=\"coin-details__market-data\">\n          Current Price:{symbol}{\" \"}\n          {numberWithCommas(\n            coin?.market_data.current_price[currency.toLowerCase()]\n          )}\n        </h3>\n        <h3 className=\"coin-details__market-data\">\n          Market Cap: {symbol}{\" \"}\n          {numberWithCommas(\n            coin?.market_data.market_cap[currency.toLowerCase()]\n              .toString()\n              .slice(0, -6)\n          )}\n          M\n        </h3>\n      </div>\n\n      <CoinLineGraph coin={coin} />\n    </div>\n  );\n};\n\nexport default CoinDetails;\n","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\components\\CoinLineGraph\\CoinLineGraph.js",["63","64","65","66","67"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../../config/api\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  CircularProgress,\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport SelectButton from \"../SelectButton/SelectButton\";\nimport { chartDays } from \"../../config/data\";\nimport { CryptoState } from \"../../CryptoContext\";\n\nconst CoinLineGraph = ({ coin }) => {\n  const [historicData, setHistoricData] = useState();\n  const [days, setDays] = useState(1);\n  const { currency } = CryptoState();\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0,\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const fetchHistoricData = async () => {\n    const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n    console.log(data.prices);\n    setHistoricData(data.prices);\n  };\n\n  useEffect(() => {\n    fetchHistoricData();\n  }, [days]);\n\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  return (\n    <div className={classes.container}>\n      {!historicData ? (\n        <CircularProgress style={{ color: \"gold\" }} size={250} thickness={1} />\n      ) : (\n        <>\n          <Line\n            data={{\n              labels: historicData.map((coin, index) => {\n                // let date = new Date(coin[0]);\n                // let time =\n                //   date.getHours() > 12\n                //     ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                //     : `${date.getHours()}:${date.getMinutes()} AM`;\n                // return days === 1 ? time : date.toLocaleDateString();\n                const unixTime = coin[0];\n                let time;\n                if (days === 1) {\n                  let date = new Date(coin[0]);\n                  let time =\n                    date.getHours() > 12\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\n                  return days === 1 ? time : date.toLocaleDateString();\n\n                  return time;\n                } else {\n                  const date = new Date(unixTime * 100);\n                  let month = date.getMonth();\n                  let day = date.getDate();\n                  let year = date.getFullYear();\n                  time = `${month}/${day}/${year}`;\n                  return time;\n                }\n                coin[0] = time;\n              }),\n\n              datasets: [\n                {\n                  data: historicData.map((coin) => coin[1]),\n                  label: `Price ( Past ${days} Days ) in ${currency}`,\n                  borderColor: \"#EEBC1D\",\n                },\n              ],\n            }}\n            options={{\n              elements: {\n                point: {\n                  radius: 1,\n                },\n              },\n            }}\n          />\n          <div\n            style={{\n              display: \"flex\",\n              marginTop: 20,\n              justifyContent: \"space-around\",\n              width: \"100%\",\n            }}\n          >\n            {chartDays.map((day) => (\n              <SelectButton\n                key={day.value}\n                onClick={() => setDays(day.value)}\n                selected={day.value === days}\n              >\n                {day.label}\n              </SelectButton>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CoinLineGraph;\n","C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\components\\SelectButton\\SelectButton.js",[],"C:\\Users\\domin\\Desktop\\Brainstation\\dominique-cortesiano-capstone\\client\\src\\components\\CoinsTable\\CoinsTable.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":12,"column":10,"nodeType":"74","messageId":"75","endLine":12,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":12,"column":16,"nodeType":"74","messageId":"75","endLine":12,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":29,"column":6,"nodeType":"79","endLine":29,"endColumn":8,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"81","line":9,"column":3,"nodeType":"74","messageId":"75","endLine":9,"endColumn":16},{"ruleId":"77","severity":1,"message":"82","line":48,"column":6,"nodeType":"79","endLine":48,"endColumn":12,"suggestions":"83"},{"ruleId":"72","severity":1,"message":"84","line":50,"column":9,"nodeType":"74","messageId":"75","endLine":50,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":84,"column":19,"nodeType":"87","messageId":"88","endLine":84,"endColumn":31},{"ruleId":"85","severity":1,"message":"86","line":93,"column":17,"nodeType":"89","messageId":"88","endLine":93,"endColumn":32},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCoin'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'ThemeProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchHistoricData'. Either include it or remove the dependency array.",["93"],"'darkTheme' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","ExpressionStatement","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [fetchCoin]",{"range":"98","text":"99"},"Update the dependencies array to be: [days, fetchHistoricData]",{"range":"100","text":"101"},[845,847],"[fetchCoin]",[1256,1262],"[days, fetchHistoricData]"]