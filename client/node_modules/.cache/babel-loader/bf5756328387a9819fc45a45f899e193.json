{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domin\\\\Desktop\\\\Brainstation\\\\dominique-cortesiano-capstone\\\\client\\\\src\\\\components\\\\CoinInfo\\\\CoinInfo.js\",\n    _s = $RefreshSig$();\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { HistoricalChart } from \"./../../config/api\";\n// import { Line } from \"react-chartjs-2\";\n// import { CircularProgress } from \"@material-ui/core\";\n// import { CryptoState } from \"../../CryptoContext\";\n// const CoinInfo = ({ coin }) => {\n//   const [historicData, setHistoricData] = useState();\n//   const [days, setDays] = useState(1);\n//   const { currency } = CryptoState();\n//   const fetchHistoricData = async () => {\n//     const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n//     setHistoricData(data.prices);\n//   };\n//   console.log(\"data\", historicData);\n//   useEffect(() => {\n//     fetchHistoricData();\n//   }, [currency, days]);\n//   return (\n//     <div className=\"coin-info\">\n//       coin info\n//       {!historicData ? (\n//         <CircularProgress style={{ color: \"gold\" }} size={250} thickness={1} />\n//       ) : (\n//         <>\n//           <Line\n//             data={{\n//               labels: historicData.map((coin) => {\n//                 let date = new Date(coin[0]);\n//                 let time =\n//                   date.getHours() > 12\n//                     ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n//                     : `${date.getHours()}:${date.getMinutes()} AM`;\n//                 return days === 1 ? time : date.toLocaleDateString();\n//               }),\n//               datasets: [\n//                 {\n//                   data: historicData.map((coin) => coin[1]),\n//                   label: `Price ( Past ${days} Days ) in ${currency}`,\n//                   borderColor: \"#EEBC1D\",\n//                 },\n//               ],\n//             }}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n// export default CoinInfo;\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../../config/api\";\nimport { Line } from \"react-chartjs-2\";\nimport { CircularProgress, createTheme, makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport SelectButton from \"../SelectButton/SelectButton\";\nimport { chartDays } from \"../../config/data\";\nimport { CryptoState } from \"../../CryptoContext\"; // import { useEffect, useState } from \"react\";\n// import { HistoricalChart } from \"./../../config/api\";\n// import { Line } from \"react-chartjs-2\";\n// import { CircularProgress } from \"@material-ui/core\";\n// import { CryptoState } from \"../../CryptoContext\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CoinInfo = _ref => {\n  _s();\n\n  let {\n    coin\n  } = _ref;\n  const [historicData, setHistoricData] = useState();\n  const [days, setDays] = useState(1);\n  const {\n    currency\n  } = CryptoState();\n  const useStyles = makeStyles(theme => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0\n      }\n    }\n  }));\n  const classes = useStyles();\n\n  const fetchHistoricData = async () => {\n    const {\n      data\n    } = await axios.get(HistoricalChart(coin.id, days, currency));\n    setHistoricData(data.prices);\n  };\n\n  console.log(coin);\n  useEffect(() => {\n    fetchHistoricData();\n  }, [days]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: !historicData ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        color: \"gold\"\n      },\n      size: 250,\n      thickness: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: historicData.map(coin => {\n            let date = new Date(coin[0]);\n            let time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes()} AM`;\n            return days === 1 ? time : date.toLocaleDateString();\n          }) // datasets: [\n          //   {\n          //     data: historicData.map((coin) => coin[1]),\n          //     label: `Price ( Past ${days} Days ) in ${currency}`,\n          //     borderColor: \"#EEBC1D\",\n          //   },\n          // ],\n\n        } // options={{\n        //   elements: {\n        //     point: {\n        //       radius: 1,\n        //     },\n        //   },\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinInfo, \"gY5gImAQTzqCybazfrDdWTlBRYo=\", true);\n\n_c = CoinInfo;\nexport default CoinInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"sources":["C:/Users/domin/Desktop/Brainstation/dominique-cortesiano-capstone/client/src/components/CoinInfo/CoinInfo.js"],"names":["axios","useEffect","useState","HistoricalChart","Line","CircularProgress","createTheme","makeStyles","ThemeProvider","SelectButton","chartDays","CryptoState","CoinInfo","coin","historicData","setHistoricData","days","setDays","currency","useStyles","theme","container","width","display","flexDirection","alignItems","justifyContent","marginTop","padding","breakpoints","down","paddingTop","classes","fetchHistoricData","data","get","id","prices","console","log","darkTheme","palette","primary","main","type","color","labels","map","date","Date","time","getHours","getMinutes","toLocaleDateString"],"mappings":"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","sourcesContent":["// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { HistoricalChart } from \"./../../config/api\";\n// import { Line } from \"react-chartjs-2\";\n// import { CircularProgress } from \"@material-ui/core\";\n// import { CryptoState } from \"../../CryptoContext\";\n\n// const CoinInfo = ({ coin }) => {\n//   const [historicData, setHistoricData] = useState();\n//   const [days, setDays] = useState(1);\n//   const { currency } = CryptoState();\n\n//   const fetchHistoricData = async () => {\n//     const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n\n//     setHistoricData(data.prices);\n//   };\n\n//   console.log(\"data\", historicData);\n\n//   useEffect(() => {\n//     fetchHistoricData();\n//   }, [currency, days]);\n\n//   return (\n//     <div className=\"coin-info\">\n//       coin info\n//       {!historicData ? (\n//         <CircularProgress style={{ color: \"gold\" }} size={250} thickness={1} />\n//       ) : (\n//         <>\n//           <Line\n//             data={{\n//               labels: historicData.map((coin) => {\n//                 let date = new Date(coin[0]);\n//                 let time =\n//                   date.getHours() > 12\n//                     ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n//                     : `${date.getHours()}:${date.getMinutes()} AM`;\n//                 return days === 1 ? time : date.toLocaleDateString();\n//               }),\n//               datasets: [\n//                 {\n//                   data: historicData.map((coin) => coin[1]),\n//                   label: `Price ( Past ${days} Days ) in ${currency}`,\n//                   borderColor: \"#EEBC1D\",\n//                 },\n//               ],\n//             }}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CoinInfo;\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../../config/api\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  CircularProgress,\n  createTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport SelectButton from \"../SelectButton/SelectButton\";\nimport { chartDays } from \"../../config/data\";\nimport { CryptoState } from \"../../CryptoContext\";\n\n// import { useEffect, useState } from \"react\";\n// import { HistoricalChart } from \"./../../config/api\";\n// import { Line } from \"react-chartjs-2\";\n// import { CircularProgress } from \"@material-ui/core\";\n// import { CryptoState } from \"../../CryptoContext\";\n\nconst CoinInfo = ({ coin }) => {\n  const [historicData, setHistoricData] = useState();\n  const [days, setDays] = useState(1);\n  const { currency } = CryptoState();\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0,\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const fetchHistoricData = async () => {\n    const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n\n    setHistoricData(data.prices);\n  };\n\n  console.log(coin);\n\n  useEffect(() => {\n    fetchHistoricData();\n  }, [days]);\n\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  return (\n    <div className={classes.container}>\n      {!historicData ? (\n        <CircularProgress style={{ color: \"gold\" }} size={250} thickness={1} />\n      ) : (\n        <>\n          <Line\n            data={{\n              labels: historicData.map((coin) => {\n                let date = new Date(coin[0]);\n                let time =\n                  date.getHours() > 12\n                    ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                    : `${date.getHours()}:${date.getMinutes()} AM`;\n                return days === 1 ? time : date.toLocaleDateString();\n              }),\n\n              // datasets: [\n              //   {\n              //     data: historicData.map((coin) => coin[1]),\n              //     label: `Price ( Past ${days} Days ) in ${currency}`,\n              //     borderColor: \"#EEBC1D\",\n              //   },\n              // ],\n            }}\n            // options={{\n            //   elements: {\n            //     point: {\n            //       radius: 1,\n            //     },\n            //   },\n            // }}\n          />\n          {/* <div\n            style={{\n              display: \"flex\",\n              marginTop: 20,\n              justifyContent: \"space-around\",\n              width: \"100%\",\n            }}\n          >\n            {chartDays.map((day) => (\n              <SelectButton\n                key={day.value}\n                onClick={() => setDays(day.value)}\n                selected={day.value === days}\n              >\n                {day.label}\n              </SelectButton>\n            ))}\n          </div> */}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CoinInfo;\n"]},"metadata":{},"sourceType":"module"}